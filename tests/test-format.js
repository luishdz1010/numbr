var
  mocha = require('mocha'),
  expect = require('chai').expect,
  Numbr = require('../numbr.js').Numbr;

describe('Numbr#format', function(){
  it('should format simple numbers', function(){
    var values = [
        [10000,'0,0.0000','10,000.0000'],
        [10000.23,'0,0','10,000'],
        [-10000,'0,0.0','-10,000.0'],
        [10000.1234,'0.000','10000.123'],
        [10000,'0[.]00','10000'],
        [10000.1,'0[.]00','10000.10'],
        [10000.123,'0[.]00','10000.12'],
        [10000.456,'0[.]00','10000.46'],
        [10000.001,'0[.]00','10000'],
        [10000.45,'0[.]00[0]','10000.45'],
        [10000.456,'0[.]00[0]','10000.456'],
        [-10000,'(0,0.0000)','(10,000.0000)'],
        [-12300,'+0,0.0000','-12,300.0000'],
        [1230,'+0,0','+1,230'],
        [100.78, '0', '101'],
        [100.28, '0', '100'],
        [1.932,'0.0','1.9'],
        [1.9687,'0','2'],
        [1.9687,'0.0','2.0'],
        [-0.23,'.00','-.23'],
        [-0.23,'(.00)','(.23)'],
        [0.23,'0.00000','0.23000'],
        [0.67,'0.0[0000]','0.67'],
        /*[2000000000,'0.0a','2.0b'],
        [1230974,'0.0a','1.2m'],
        [1460,'0a','1k'],
        [-104000,'0 a','-104 k'],
        [1,'0o','1st'],
        [52,'0 o','52 nd'],
        [23,'0o','23rd'],
        [100,'0o','100th'],

        // specified abbreviations
        [-5444333222111, '0,0 aK', '-5,444,333,222 k'],
        [-5444333222111, '0,0 aM', '-5,444,333 m'],
        [-5444333222111, '0,0 aB', '-5,444 b'],
        [-5444333222111, '0,0 aT', '-5 t']*/
      ];

    for(var i = 0; i < values.length; ++i) {
      var
        value = values[i],
        N = new Numbr(value[0]);

      expect(N.format(value[1])).to.equal(value[2]);
    }
  });
});